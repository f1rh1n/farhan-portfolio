name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run build

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        if: github.event_name == 'pull_request'

      - name: Pull Vercel Environment Information (Production)
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        if: github.event_name == 'pull_request'

      - name: Build Project Artifacts (Production)
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

      - name: Deploy Project Artifacts to Vercel (Preview)
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        if: github.event_name == 'pull_request'

      - name: Deploy Project Artifacts to Vercel (Production)
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'